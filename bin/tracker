#!/usr/bin/env ruby

# == Synopsis
#   Uses the Fog gem to track the status of cloud computing resources
#
# == Usage
#   tracker.rb [options] ACCOUNTS_CONFIG_FILE.YML
#
# == Options (all options can be put into the config file)
#   -d, --delay [INTEGER]       Seconds between status updates. default = 180
#   -l, --log-level [LEVEL]     Sets Log4r level for console output. default = INFO
#   -h, --help                  Displays help message
#
# == Author
#   Benton Roberts

require 'optparse'
require 'fog_tracker'
LOG_LVLS = {
  "DEBUG" => ::Logger::DEBUG,
  "INFO"  => ::Logger::INFO,
  "WARN"  => ::Logger::WARN,
  "ERROR" => ::Logger::ERROR,
  "FATAL" => ::Logger::FATAL
}

module FogTracker
  class FogTrackerConsoleApp

    def initialize
      @log = FogTracker.default_logger(STDOUT)
      parse_options
      @log.info "Loading account information from #{ARGV[0]}"
      @accounts = YAML::load(File.open(ARGV[0]))
      @tracker = FogTracker::Tracker.new(
        @accounts, {:logger => @log, :delay => @opts[:delay]}
      )
    end

    def go
      @tracker.start
      while true do
        sleep 60   # Loop forever
      end
    end

    def parse_options
      @opts = {:log_level  => 'INFO'}
      optparse = OptionParser.new do |opts|
        opts.banner = "Usage: tracker [options] ACCOUNTS.YML"
        opts.on('-d', '--delay SECONDS', Integer,
        'Number of seconds between status updates') do |delay|
          @opts[:delay] = delay
        end
        opts.on('-l', '--log-level LEVEL', 'Set logging level') do |log_level|
          @opts[:log_level] = log_level.upcase
        end
        opts.on('-h', '--help', 'Display this help message') do
          puts opts ; exit
        end
      end
      optparse.parse!
      @log.level = LOG_LVLS[@opts[:log_level]] if LOG_LVLS[@opts[:log_level]]
      if ARGV.count < 1
        @log.error "A YAML file with account info must be specified"
        exit 1
      end
    end

  end
end

FogTracker::FogTrackerConsoleApp.new.go
